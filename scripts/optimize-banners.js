const fs = require('fs');
const path = require('path');

const bannersDir = path.join(__dirname, '..', 'public', 'banners-duplas');

function sanitizeFilenameImproved(filename) {
  // Extrair timestamp, nomes dos jogadores e extens√£o
  const match = filename.match(/^(\d+)_(.+)_(.+)\.(\w+)$/);
  
  if (!match) {
    console.log(`‚ùå N√£o foi poss√≠vel processar: ${filename}`);
    return filename;
  }
  
  const [, timestamp, playersName, originalName, extension] = match;
  
  // Limpar nome dos jogadores de forma mais refinada
  const cleanPlayersName = playersName
    .toLowerCase()
    .replace(/[√†√°√¢√£√§√•]/g, 'a')
    .replace(/[√®√©√™√´]/g, 'e')
    .replace(/[√¨√≠√Æ√Ø]/g, 'i')
    .replace(/[√≤√≥√¥√µ√∂]/g, 'o')
    .replace(/[√π√∫√ª√º]/g, 'u')
    .replace(/[√ß]/g, 'c')
    .replace(/[√±]/g, 'n')
    .replace(/\s+e\s+/gi, '-e-')  // "E" vira "-e-"
    .replace(/\s+/g, '-')         // Espa√ßos viram h√≠fens
    .replace(/[^a-z0-9\-]/g, '')  // Remove caracteres especiais
    .replace(/-+/g, '-')          // Remove h√≠fens duplicados
    .replace(/^-|-$/g, '');       // Remove h√≠fens no in√≠cio/fim
  
  // Simplificar nome original (manter apenas parte mais relevante)
  let cleanOriginalName = originalName
    .toLowerCase()
    .replace(/[√†√°√¢√£√§√•]/g, 'a')
    .replace(/[√®√©√™√´]/g, 'e')
    .replace(/[√¨√≠√Æ√Ø]/g, 'i')
    .replace(/[√≤√≥√¥√µ√∂]/g, 'o')
    .replace(/[√π√∫√ª√º]/g, 'u')
    .replace(/[√ß]/g, 'c')
    .replace(/[√±]/g, 'n')
    // Remover padr√µes comuns desnecess√°rios
    .replace(/duplique.*?edite/g, 'banner')
    .replace(/screenshot.*?canva/g, 'banner')
    .replace(/copia.*?party/g, 'banner')
    .replace(/tag.*?milena/g, 'banner')
    .replace(/img-\d+-wa\d+/g, 'whatsapp')
    .replace(/\d{8}_\d{6}_\d{4}/g, 'banner')
    .replace(/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/g, 'banner')
    .replace(/\s+/g, '-')
    .replace(/[^a-z0-9\-_]/g, '')
    .replace(/-+/g, '-')
    .replace(/^-|-$/g, '');
  
  // Se ficou muito longo ou vazio, usar "banner"
  if (cleanOriginalName.length > 20 || cleanOriginalName.length === 0) {
    cleanOriginalName = 'banner';
  }
  
  // Extens√£o em min√∫scula
  const cleanExtension = extension.toLowerCase();
  
  // Formato final: timestamp_jogadores_arquivo.ext
  return `${timestamp}_${cleanPlayersName}_${cleanOriginalName}.${cleanExtension}`;
}

function optimizeFileNames() {
  try {
    if (!fs.existsSync(bannersDir)) {
      console.log(`‚ùå Diret√≥rio n√£o encontrado: ${bannersDir}`);
      return;
    }
    
    const files = fs.readdirSync(bannersDir);
    
    console.log('üîß Otimizando nomes dos arquivos...\n');
    console.log(`üìÅ Diret√≥rio: ${bannersDir}\n`);
    
    let optimized = 0;
    let skipped = 0;
    let errors = 0;
    
    for (const file of files) {
      if (file.startsWith('.') || !file.includes('_')) {
        skipped++;
        continue;
      }
      
      const oldPath = path.join(bannersDir, file);
      const newFilename = sanitizeFilenameImproved(file);
      const newPath = path.join(bannersDir, newFilename);
      
      if (file === newFilename) {
        console.log(`‚úÖ ${file} (j√° otimizado)`);
        skipped++;
        continue;
      }
      
      // Verificar se o novo nome j√° existe
      if (fs.existsSync(newPath)) {
        console.log(`‚ö†Ô∏è  ${file} -> ${newFilename} (conflito - pulado)`);
        skipped++;
        continue;
      }
      
      try {
        // Renomear arquivo
        fs.renameSync(oldPath, newPath);
        console.log(`üîß ${file}`);
        console.log(`   -> ${newFilename}`);
        optimized++;
      } catch (error) {
        console.log(`‚ùå Erro ao otimizar ${file}: ${error.message}`);
        errors++;
      }
    }
    
    console.log(`\nüìä Resumo da otimiza√ß√£o:`);
    console.log(`   üîß Otimizados: ${optimized}`);
    console.log(`   ‚è≠Ô∏è  Pulados: ${skipped}`);
    console.log(`   ‚ùå Erros: ${errors}`);
    console.log('\n‚ú® Otimiza√ß√£o conclu√≠da!');
    
  } catch (error) {
    console.error('‚ùå Erro durante a otimiza√ß√£o:', error);
  }
}

// Executar apenas se solicitado
if (process.argv.includes('--optimize')) {
  optimizeFileNames();
} else {
  console.log('üí° Para otimizar os nomes, execute: node scripts/rename-banners.js --optimize');
}